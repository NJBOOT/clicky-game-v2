{"version":3,"sources":["Components/Nav/index.js","Components/Card/index.js","Components/CardContainer/index.js","Components/Header/index.js","Components/Backdrop/Backdrop.js","Components/Modal/index.js","App.js","index.js"],"names":["Nav","props","className","score","highScore","Card","src","image","alt","id","onClick","e","handleClick","CardContainer","cards","map","card","key","Header","Backdrop","gameOver","Modal","classes","join","won","style","color","resetGame","App","state","cardArray","clickedCards","shuffleArray","arr","array","i","length","j","Math","floor","random","setState","checkIfClicked","includes","toString","addToClicked","target","newClickedCards","incrementScore","setTimeout","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.406f0b2e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nconst Nav = props => {\n  return (\n    <nav className=\"Nav\">\n      <p>The Memory Game!</p>\n      <ul>\n        <li>Score: {props.score}</li>\n        <li>High Score: {props.highScore}</li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Card = props => {\n  return (\n    <img\n      src={props.image}\n      alt={`memory-card-${props.id}`}\n      id={props.id}\n      onClick={e => props.handleClick(e, props.id)}\n    />\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./styles.css\";\nimport Card from \"../Card\";\n\nconst CardContainer = props => {\n  return (\n    <div className=\"CardContainer\">\n      {props.cards.map(card => {\n        return (\n          <Card\n            key={`card-${card.id}`}\n            id={card.id}\n            image={card.image}\n            handleClick={props.handleClick}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardContainer;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"Header\">\n      <h1>The Memory Game</h1>\n      <h3>\n        Click on an image to increase your score, but don't click more than\n        once!\n      </h3>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Backdrop = props => {\n  return props.gameOver ? <div className=\"Backdrop\"></div> : null;\n};\n\nexport default Backdrop;\n","import React from \"react\";\nimport \"./styles.css\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nconst Modal = props => {\n  let classes = [];\n  props.gameOver\n    ? (classes = [\"Modal\", \"Open\"])\n    : (classes = [\"Modal\", \"Close\"]);\n  return (\n    <>\n      <Backdrop gameOver={props.gameOver} />\n      <div className={classes.join(\" \")}>\n        {props.won ? (\n          <h1 style={{ color: \"green\" }}>YOU WON!</h1>\n        ) : (\n          <h1 style={{ color: \"red\" }}>YOU LOST!</h1>\n        )}\n        <button onClick={props.resetGame}>Play Again</button>\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport cardArray from \"./cards.json\";\nimport \"./App.css\";\nimport Nav from \"./Components/Nav\";\nimport CardContainer from \"./Components/CardContainer\";\nimport Header from \"./Components/Header\";\nimport Modal from \"./Components/Modal\";\n\nclass App extends React.Component {\n  state = {\n    cards: cardArray,\n    clickedCards: [],\n    score: 0,\n    highScore: 0,\n    gameOver: false,\n    won: false,\n  };\n\n  shuffleArray = arr => {\n    let array = [...arr];\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    this.setState({\n      cards: array,\n    });\n  };\n\n  checkIfClicked = id => {\n    const clickedCards = [...this.state.clickedCards];\n    return clickedCards.includes(id.toString());\n  };\n\n  addToClicked = e => {\n    const { id } = e.target;\n    const newClickedCards = [...this.state.clickedCards, id];\n    this.setState({\n      clickedCards: newClickedCards,\n    });\n  };\n\n  incrementScore = () => {\n    let score = this.state.score;\n    score += 1;\n    score > this.state.highScore\n      ? this.setState({ score, highScore: score })\n      : this.setState({ score });\n    if (score === 12) {\n      this.setState({ won: true });\n      this.gameOver();\n    }\n  };\n\n  resetGame = () => {\n    this.setState({\n      clickedCards: [],\n      score: 0,\n      gameOver: false,\n    });\n    setTimeout(() => {\n      this.setState({ won: false });\n    }, 600);\n    this.shuffleArray(this.state.cards);\n  };\n\n  gameOver = () => {\n    this.setState({ gameOver: true });\n  };\n\n  handleClick = (e, id) => {\n    if (!this.checkIfClicked(id)) {\n      this.addToClicked(e);\n      this.incrementScore();\n      this.shuffleArray(this.state.cards);\n    } else {\n      this.gameOver();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav score={this.state.score} highScore={this.state.highScore} />\n        <Modal\n          gameOver={this.state.gameOver}\n          won={this.state.won}\n          resetGame={this.resetGame}\n        />\n        <Header />\n        <CardContainer\n          cards={this.state.cards}\n          handleClick={this.handleClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}